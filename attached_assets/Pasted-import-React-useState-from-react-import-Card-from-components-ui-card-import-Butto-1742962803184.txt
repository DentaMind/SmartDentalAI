import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const assistantModules = [
  // Existing modules...
  {
    title: "HIPAA Compliance & Patient Privacy",
    description: "Required training for dental staff on how to protect patient data and comply with federal HIPAA regulations.",
    steps: [
      "Understand what PHI (Protected Health Information) includes — name, birthdate, procedures, X-rays, etc.",
      "Never discuss patient information in public areas (hallways, waiting rooms, etc.).",
      "Always log out of software when walking away from a workstation.",
      "Do not share usernames, passwords, or login credentials with others.",
      "Only access charts for patients you are actively treating or assisting with.",
      "Report any suspected breach or exposure of PHI to your compliance officer or supervisor immediately.",
      "Be aware that HIPAA violations can result in fines, job loss, and legal consequences."
    ],
    image: "/images/hipaa_training.png",
    quiz: [
      {
        question: "What does PHI stand for?",
        options: ["Personal Health Inquiry", "Protected Health Information", "Private Health Index", "Public Health Initiative"],
        answer: "Protected Health Information"
      },
      {
        question: "Which of the following is considered PHI?",
        options: ["Tooth number only", "Patient’s name and DOB", "Chair color", "Appointment time only"],
        answer: "Patient’s name and DOB"
      },
      {
        question: "Where is it inappropriate to discuss patient information?",
        options: ["In private office", "In operatory", "In hallway or breakroom", "During huddle"],
        answer: "In hallway or breakroom"
      },
      {
        question: "What should you do before walking away from a logged-in workstation?",
        options: ["Switch tabs", "Minimize the window", "Log out or lock the screen", "Call the front"],
        answer: "Log out or lock the screen"
      },
      {
        question: "Who should you contact if you think there’s been a data breach?",
        options: ["The front desk", "The patient", "Compliance officer or supervisor", "The IT company"],
        answer: "Compliance officer or supervisor"
      },
      {
        question: "What is a consequence of violating HIPAA?",
        options: ["A warning only", "Nothing happens", "Fines, job loss, or legal action", "Patient gets a refund"],
        answer: "Fines, job loss, or legal action"
      },
      {
        question: "Can you share your login with another assistant?",
        options: ["Yes, if they’re busy", "No, it’s a violation", "Only if you're done", "If it's written down"],
        answer: "No, it’s a violation"
      },
      {
        question: "Is it okay to look at a patient’s chart out of curiosity?",
        options: ["Yes, if you’re staff", "No, unless you're actively assisting with care", "Yes, with permission", "Only after hours"],
        answer: "No, unless you're actively assisting with care"
      },
      {
        question: "Which of these would be a HIPAA breach?",
        options: ["Reading the schedule", "Printing a consent form", "Leaving charts open in view of other patients", "Using a secure login"],
        answer: "Leaving charts open in view of other patients"
      },
      {
        question: "How often should you take HIPAA training?",
        options: ["Once when hired", "Every 5 years", "Annually or when laws change", "Only if audited"],
        answer: "Annually or when laws change"
      }
    ]
  }
];

export default function AssistantTab() {
  const [quizResults, setQuizResults] = useState({});

  const handleQuizSubmit = (title, score) => {
    setQuizResults(prev => ({ ...prev, [title]: score }));
  };

  return (
    <div className="p-6 grid gap-6">
      {assistantModules.map((module, idx) => (
        <Card key={idx} className="p-4 rounded-2xl shadow">
          <h2 className="text-xl font-bold mb-2">{module.title}</h2>
          <p className="mb-4">{module.description}</p>
          <img src={module.image} alt={module.title} className="mb-4 w-full max-w-md rounded" />
          <ul className="list-disc ml-6 mb-4">
            {module.steps.map((step, i) => (
              <li key={i}>{step}</li>
            ))}
          </ul>
          <Quiz 
            module={module.title} 
            questions={module.quiz} 
            onSubmit={handleQuizSubmit} 
          />
          {quizResults[module.title] >= 90 && (
            <p className="text-green-600 font-semibold mt-2">✅ Passed with {quizResults[module.title]}%</p>
          )}
        </Card>
      ))}
    </div>
  );
}

function Quiz({ module, questions, onSubmit }) {
  const [answers, setAnswers] = useState({});
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(null);

  const handleChange = (qIndex, value) => {
    setAnswers(prev => ({ ...prev, [qIndex]: value }));
  };

  const handleSubmit = () => {
    let correct = 0;
    questions.forEach((q, i) => {
      if (answers[i] === q.answer) correct++;
    });
    const result = Math.round((correct / questions.length) * 100);
    setScore(result);
    setSubmitted(true);
    onSubmit(module, result);
  };

  return (
    <div className="mt-6">
      <h3 className="font-semibold text-lg mb-2">Quiz</h3>
      {questions.map((q, i) => (
        <div key={i} className="mb-4">
          <p className="mb-1 font-medium">{i + 1}. {q.question}</p>
          {q.options.map((opt, j) => (
            <label key={j} className="block">
              <input
                type="radio"
                name={`q-${module}-${i}`}
                value={opt}
                onChange={() => handleChange(i, opt)}
                disabled={submitted}
              /> {opt}
            </label>
          ))}
        </div>
      ))}
      {!submitted && (
        <Button onClick={handleSubmit}>Submit Quiz</Button>
      )}
      {submitted && (
        <p className="mt-2 font-semibold">Score: {score}%</p>
      )}
    </div>
  );
}

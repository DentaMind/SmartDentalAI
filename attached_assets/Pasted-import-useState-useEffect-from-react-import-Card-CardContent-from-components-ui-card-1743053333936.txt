import { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { useParams } from "react-router-dom";
import { fetchPatientNotes, savePatientNote, approveNote, generateTemplate } from "@/lib/api";

export default function PatientNotes() {
  const { patientId } = useParams();
  const [notes, setNotes] = useState([]);
  const [draft, setDraft] = useState("");
  const [isSaving, setIsSaving] = useState(false);
  const [loadingTemplate, setLoadingTemplate] = useState(false);

  useEffect(() => {
    if (patientId) {
      fetchPatientNotes(patientId).then(setNotes);
    }
  }, [patientId]);

  const handleSaveNote = async () => {
    setIsSaving(true);
    const newNote = await savePatientNote(patientId, draft);
    setNotes([newNote, ...notes]);
    setDraft("");
    setIsSaving(false);
  };

  const handleApprove = async (noteId) => {
    await approveNote(noteId);
    setNotes((prev) =>
      prev.map((n) => (n.id === noteId ? { ...n, approved: true } : n))
    );
  };

  const handleGenerateTemplate = async () => {
    setLoadingTemplate(true);
    const template = await generateTemplate("comprehensive_exam");
    setDraft(template);
    setLoadingTemplate(false);
  };

  return (
    <div className="p-4 space-y-4">
      <h2 className="text-xl font-semibold">Patient Notes</h2>

      <Card>
        <CardContent className="space-y-2">
          <Textarea
            placeholder="Enter your note, or dictate using voice AI..."
            value={draft}
            onChange={(e) => setDraft(e.target.value)}
          />
          <div className="flex gap-2">
            <Button onClick={handleSaveNote} disabled={isSaving || !draft}>
              {isSaving ? "Saving..." : "Save Draft"}
            </Button>
            <Button variant="outline" onClick={handleGenerateTemplate} disabled={loadingTemplate}>
              {loadingTemplate ? "Loading Template..." : "Load Comp Exam Template"}
            </Button>
          </div>
        </CardContent>
      </Card>

      <div className="space-y-2">
        {notes.map((note) => (
          <Card key={note.id} className="border-l-4 border-green-500">
            <CardContent className="space-y-1">
              <div className="text-sm text-gray-600">
                <b>Provider:</b> {note.provider} | <b>Date:</b> {note.date}
              </div>
              <div>{note.content}</div>
              {!note.approved && (
                <Button size="sm" onClick={() => handleApprove(note.id)}>
                  Approve
                </Button>
              )}
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}

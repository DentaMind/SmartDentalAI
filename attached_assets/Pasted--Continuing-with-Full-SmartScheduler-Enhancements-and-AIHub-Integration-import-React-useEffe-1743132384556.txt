// âœ… Continuing with Full SmartScheduler Enhancements and AIHub Integration

import React, { useEffect, useState } from "react";
import axios from "axios";
import { cn } from "@/lib/utils";
import { Card } from "@/components/ui/card";
import { Tooltip } from "@/components/ui/tooltip";
import { useToast } from "@/components/ui/use-toast";
import { Loader2 } from "lucide-react";

export function SmartScheduler() {
  const [appointments, setAppointments] = useState([]);
  const [loading, setLoading] = useState(true);
  const { toast } = useToast();

  useEffect(() => {
    axios
      .get("/api/schedule")
      .then((res) => setAppointments(res.data))
      .catch(() => toast({ title: "Error", description: "Could not load schedule." }))
      .finally(() => setLoading(false));
  }, []);

  const hours = Array.from({ length: 13 }, (_, i) => 7 + i);
  const providers = ["Dr. A", "Dr. B", "Dr. C", "Hyg A", "Hyg B", "OM", "Assist"];

  return (
    <div className="overflow-x-auto">
      <div className="grid grid-cols-[100px_repeat(7,minmax(200px,1fr))] border-t">
        <div className="bg-muted text-sm font-semibold p-2 border-b">Time</div>
        {providers.map((p, i) => (
          <div key={i} className="bg-muted text-sm font-semibold p-2 border-b text-center">
            {p}
          </div>
        ))}

        {loading ? (
          <div className="col-span-8 flex items-center justify-center py-20">
            <Loader2 className="animate-spin mr-2" /> Loading schedule...
          </div>
        ) : (
          hours.map((hour) => (
            <React.Fragment key={hour}>
              <div className="border-t border-r text-xs font-medium p-1 bg-gray-50">{hour}:00</div>
              {providers.map((_, colIdx) => (
                <div
                  key={`${hour}-${colIdx}`}
                  className="border-t border-r h-20 relative group bg-white hover:bg-blue-50 cursor-pointer"
                  onDoubleClick={() => toast({ title: "New Appt", description: `Slot ${hour}:00 for ${providers[colIdx]}` })}
                >
                  {appointments
                    .filter((appt) => appt.time === `${hour}:00` && appt.providerIndex === colIdx)
                    .map((appt, i) => (
                      <Tooltip key={i} content={`Click to view ${appt.patientName}'s chart`}>
                        <div
                          className={cn(
                            "absolute top-0 left-0 right-0 h-full px-2 py-1 text-xs font-medium rounded shadow-md",
                            appt.status === "confirmed" && "bg-green-100 border-l-4 border-green-500",
                            appt.status === "cancelled" && "bg-red-100 border-l-4 border-red-500",
                            appt.status === "no_show" && "bg-yellow-100 border-l-4 border-yellow-500",
                            appt.status === "unconfirmed" && "bg-gray-100 border-l-4 border-gray-400"
                          )}
                          onClick={() => window.location.href = `/patients/${appt.patientId}`}
                        >
                          <div className="font-bold truncate">{appt.patientName}</div>
                          <div className="text-xs truncate">{appt.reason}</div>
                        </div>
                      </Tooltip>
                    ))}
                </div>
              ))}
            </React.Fragment>
          ))
        )}
      </div>
    </div>
  );
}
// ðŸ’¡ DiagnosisFeedbackPanel for AI-based diagnosis explanation and provider feedback

import React, { useEffect, useState } from "react";
import axios from "axios";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/components/ui/use-toast";

export default function DiagnosisFeedbackPanel({ patientId }: { patientId: string }) {
  const [diagnosisData, setDiagnosisData] = useState<any>(null);
  const [selected, setSelected] = useState<string | null>(null);
  const [feedback, setFeedback] = useState<string>("");
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();

  useEffect(() => {
    axios.get(`/api/diagnosis/${patientId}`).then((res) => setDiagnosisData(res.data));
  }, [patientId]);

  const submitFeedback = async () => {
    setLoading(true);
    try {
      await axios.post(`/api/diagnosis/${patientId}/feedback`, {
        selected,
        feedback,
      });
      toast({
        title: "Feedback Submitted",
        description: "Your feedback has been saved and will help improve future diagnoses."
      });
    } catch (err) {
      toast({
        title: "Error",
        description: "There was a problem submitting your feedback."
      });
    } finally {
      setLoading(false);
    }
  };

  if (!diagnosisData) return <div>Loading diagnosis...</div>;

  return (
    <Card className="p-4 space-y-4">
      <h2 className="text-xl font-semibold">AI Diagnosis Suggestions</h2>
      {diagnosisData.suggestions.map((item: any, i: number) => (
        <div
          key={i}
          className={`p-3 rounded border cursor-pointer ${selected === item.label ? "border-green-600 bg-green-50" : "border-gray-300"}`}
          onClick={() => setSelected(item.label)}
        >
          <div className="flex justify-between items-center">
            <strong>{item.label}</strong>
            <Badge>{item.confidence}%</Badge>
          </div>
          <p className="text-sm text-muted-foreground mt-1">Reasoning: {item.reasoning}</p>
        </div>
      ))}

      <Textarea
        placeholder="Optional feedback or reason for override..."
        value={feedback}
        onChange={(e) => setFeedback(e.target.value)}
        className="min-h-[80px]"
      />

      <Button disabled={!selected || loading} onClick={submitFeedback}>
        {loading ? "Submitting..." : "Submit Feedback"}
      </Button>
    </Card>
  );
}
import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import jsPDF from "jspdf";

const assistantModules = [
  // Existing modules...
  // HIPAA module included here
];

export default function AssistantTab() {
  const [quizResults, setQuizResults] = useState({});
  const [certified, setCertified] = useState(false);

  const handleQuizSubmit = (title, score) => {
    setQuizResults(prev => ({ ...prev, [title]: score }));
    if (title.includes("HIPAA") && score >= 90) setCertified(true);
  };

  const generateCertificate = () => {
    const doc = new jsPDF();
    const today = new Date().toLocaleDateString();
    doc.setFontSize(20);
    doc.text("HIPAA Compliance Training Certificate", 20, 30);
    doc.setFontSize(14);
    doc.text(`This certifies that ___________________`, 20, 50);
    doc.text("has successfully completed HIPAA compliance training", 20, 60);
    doc.text("in accordance with 45 CFR Â§164.530.", 20, 70);
    doc.text(`Date: ${today}`, 20, 90);
    doc.text("Issued by: DentaMind AI Assistant Training", 20, 100);
    doc.save("HIPAA_Certificate.pdf");
  };

  return (
    <div className="p-6 grid gap-6">
      {assistantModules.map((module, idx) => (
        <Card key={idx} className="p-4 rounded-2xl shadow">
          <h2 className="text-xl font-bold mb-2">{module.title}</h2>
          <p className="mb-4">{module.description}</p>
          <img src={module.image} alt={module.title} className="mb-4 w-full max-w-md rounded" />
          <ul className="list-disc ml-6 mb-4">
            {module.steps.map((step, i) => (
              <li key={i}>{step}</li>
            ))}
          </ul>
          <Quiz 
            module={module.title} 
            questions={module.quiz} 
            onSubmit={handleQuizSubmit} 
          />
          {quizResults[module.title] >= 90 && (
            <p className="text-green-600 font-semibold mt-2">âœ… Passed with {quizResults[module.title]}%</p>
          )}
        </Card>
      ))}
      {certified && (
        <Card className="p-4 mt-4 text-center shadow-md rounded-xl">
          <h3 className="text-lg font-semibold mb-2">ðŸŽ‰ HIPAA Certification Ready</h3>
          <Button onClick={generateCertificate}>Download Certificate</Button>
        </Card>
      )}
    </div>
  );
}

function Quiz({ module, questions, onSubmit }) {
  const [answers, setAnswers] = useState({});
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(null);

  const handleChange = (qIndex, value) => {
    setAnswers(prev => ({ ...prev, [qIndex]: value }));
  };

  const handleSubmit = () => {
    let correct = 0;
    questions.forEach((q, i) => {
      if (answers[i] === q.answer) correct++;
    });
    const result = Math.round((correct / questions.length) * 100);
    setScore(result);
    setSubmitted(true);
    onSubmit(module, result);
  };

  return (
    <div className="mt-6">
      <h3 className="font-semibold text-lg mb-2">Quiz</h3>
      {questions.map((q, i) => (
        <div key={i} className="mb-4">
          <p className="mb-1 font-medium">{i + 1}. {q.question}</p>
          {q.options.map((opt, j) => (
            <label key={j} className="block">
              <input
                type="radio"
                name={`q-${module}-${i}`}
                value={opt}
                onChange={() => handleChange(i, opt)}
                disabled={submitted}
              /> {opt}
            </label>
          ))}
        </div>
      ))}
      {!submitted && (
        <Button onClick={handleSubmit}>Submit Quiz</Button>
      )}
      {submitted && (
        <p className="mt-2 font-semibold">Score: {score}%</p>
      )}
    </div>
  );
}

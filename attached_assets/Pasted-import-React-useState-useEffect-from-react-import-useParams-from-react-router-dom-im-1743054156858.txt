import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { useAuth } from "@/hooks/use-auth";

const PatientNotes = () => {
  const { patientId } = useParams();
  const { user } = useAuth();
  const [notes, setNotes] = useState([]);
  const [draftNote, setDraftNote] = useState("");
  const [editingNoteId, setEditingNoteId] = useState(null);
  const [editedContent, setEditedContent] = useState("");

  useEffect(() => {
    fetch(`/api/patients/${patientId}/notes`)
      .then((res) => res.json())
      .then(setNotes);
  }, [patientId]);

  const handleSaveDraft = async () => {
    await fetch(`/api/patients/${patientId}/notes`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ content: draftNote })
    });
    setDraftNote("");
    window.location.reload();
  };

  const handleEditNote = (noteId, content) => {
    setEditingNoteId(noteId);
    setEditedContent(content);
  };

  const handleSaveEdit = async (noteId) => {
    await fetch(`/api/patients/${patientId}/notes/${noteId}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ content: editedContent })
    });
    setEditingNoteId(null);
    window.location.reload();
  };

  const handleApprove = async (noteId) => {
    await fetch(`/api/patients/${patientId}/notes/${noteId}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ approved: true })
    });
    window.location.reload();
  };

  return (
    <div className="space-y-4">
      <Card>
        <CardContent className="p-4">
          <h2 className="text-xl font-bold mb-2">Create New Note</h2>
          <Textarea
            placeholder="Enter draft note (e.g., comprehensive exam)"
            value={draftNote}
            onChange={(e) => setDraftNote(e.target.value)}
          />
          <Button onClick={handleSaveDraft} className="mt-2">Save Draft</Button>
        </CardContent>
      </Card>

      <h2 className="text-xl font-bold">Existing Notes</h2>
      {notes.map((note) => (
        <Card key={note.id} className="bg-white border">
          <CardContent className="p-4">
            <div className="text-sm text-gray-500 mb-2">
              <strong>Provider:</strong> {note.providerName} | <strong>Date:</strong> {new Date(note.createdAt).toLocaleDateString()}
            </div>
            {editingNoteId === note.id ? (
              <>
                <Textarea
                  value={editedContent}
                  onChange={(e) => setEditedContent(e.target.value)}
                />
                <Button className="mt-2" onClick={() => handleSaveEdit(note.id)}>Save</Button>
              </>
            ) : (
              <>
                <p>{note.content}</p>
                {!note.approved && user?.role === "provider" && (
                  <div className="mt-2 space-x-2">
                    <Button onClick={() => handleEditNote(note.id, note.content)}>Edit</Button>
                    <Button onClick={() => handleApprove(note.id)}>Approve</Button>
                  </div>
                )}
              </>
            )}
          </CardContent>
        </Card>
      ))}
    </div>
  );
};

export default PatientNotes;
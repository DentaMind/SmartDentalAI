import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

interface DiagnosisFeedbackUIProps {
  patientId: string;
  diagnoses: {
    id: string;
    title: string;
    reasoning: string;
    confidence: number;
  }[];
  onFeedbackSubmitted?: () => void;
}

const DiagnosisFeedbackUI: React.FC<DiagnosisFeedbackUIProps> = ({
  patientId,
  diagnoses,
  onFeedbackSubmitted,
}) => {
  const [selectedId, setSelectedId] = useState<string | null>(null);
  const [feedback, setFeedback] = useState<string>("");
  const [submitting, setSubmitting] = useState(false);

  const submitFeedback = async () => {
    if (!selectedId) return;
    setSubmitting(true);
    try {
      const res = await fetch(`/api/diagnoses/${selectedId}/feedback`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ patientId, feedback }),
      });
      if (res.ok) {
        setFeedback("");
        setSelectedId(null);
        onFeedbackSubmitted?.();
      }
    } catch (error) {
      console.error("Feedback submission failed", error);
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <div className="space-y-4">
      {diagnoses.map((diag) => (
        <Card key={diag.id} className="border">
          <CardContent className="space-y-2 p-4">
            <div className="flex justify-between items-center">
              <h3 className="text-lg font-semibold">{diag.title}</h3>
              <Badge>{Math.round(diag.confidence * 100)}% confidence</Badge>
            </div>
            <p className="text-sm text-gray-700">{diag.reasoning}</p>
            <div className="flex gap-2">
              <Button
                variant={selectedId === diag.id ? "default" : "outline"}
                onClick={() => setSelectedId(diag.id)}
              >
                {selectedId === diag.id ? "Selected" : "Select"}
              </Button>
            </div>
          </CardContent>
        </Card>
      ))}

      {selectedId && (
        <div className="space-y-2">
          <Textarea
            placeholder="Provide feedback or explain your selection..."
            value={feedback}
            onChange={(e) => setFeedback(e.target.value)}
          />
          <Button onClick={submitFeedback} disabled={submitting}>
            {submitting ? "Submitting..." : "Submit Feedback"}
          </Button>
        </div>
      )}
    </div>
  );
};

export default DiagnosisFeedbackUI;

import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";

interface DiagnosisFeedbackUIProps {
  diagnosisSuggestions: {
    diagnosis: string;
    reasoning: string;
    confidence: number;
  }[];
  onFeedbackSubmit: (selectedDiagnosis: string, feedback: string) => void;
  onRequestMoreInfo?: () => void;
}

export const DiagnosisFeedbackUI: React.FC<DiagnosisFeedbackUIProps> = ({
  diagnosisSuggestions,
  onFeedbackSubmit,
  onRequestMoreInfo,
}) => {
  const [selected, setSelected] = useState<string>("");
  const [feedback, setFeedback] = useState<string>("");

  const handleSubmit = () => {
    if (selected) {
      onFeedbackSubmit(selected, feedback);
    }
  };

  return (
    <Card className="w-full bg-white shadow-md rounded-xl">
      <CardContent className="space-y-4 p-6">
        <h2 className="text-xl font-semibold">AI Diagnosis Suggestions</h2>
        <div className="space-y-3">
          {diagnosisSuggestions.map((item, index) => (
            <div
              key={index}
              className={`border p-3 rounded-lg cursor-pointer ${
                selected === item.diagnosis ? "border-green-500 bg-green-50" : "border-gray-300"
              }`}
              onClick={() => setSelected(item.diagnosis)}
            >
              <p className="font-medium">{item.diagnosis}</p>
              <p className="text-sm text-gray-500">{item.reasoning}</p>
              <p className="text-sm text-gray-700 mt-1">
                Confidence: {(item.confidence * 100).toFixed(1)}%
              </p>
            </div>
          ))}
        </div>
        <div>
          <label className="text-sm font-medium text-gray-700">Optional Feedback</label>
          <Textarea
            placeholder="Provide additional comments or corrections..."
            value={feedback}
            onChange={(e) => setFeedback(e.target.value)}
            className="mt-1"
          />
        </div>
        <div className="flex items-center gap-4">
          <Button onClick={handleSubmit} disabled={!selected}>
            Submit Feedback
          </Button>
          {onRequestMoreInfo && (
            <Button variant="outline" onClick={onRequestMoreInfo}>
              Ask AI for More Info
            </Button>
          )}
        </div>
      </CardContent>
    </Card>
  );
};
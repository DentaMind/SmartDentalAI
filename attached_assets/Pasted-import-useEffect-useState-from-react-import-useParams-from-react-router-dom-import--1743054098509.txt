import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";

interface Note {
  id: string;
  content: string;
  provider: string;
  createdAt: string;
  approved: boolean;
  templateUsed?: string;
}

export default function PatientNotesPage() {
  const { id } = useParams();
  const [notes, setNotes] = useState<Note[]>([]);
  const [draft, setDraft] = useState("");
  const [template, setTemplate] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);

  useEffect(() => {
    fetch(`/api/patients/${id}/notes`)
      .then((res) => res.json())
      .then((data) => setNotes(data.notes || []));
  }, [id]);

  const submitDraft = async () => {
    setIsSubmitting(true);
    const res = await fetch(`/api/patients/${id}/notes`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ content: draft, template }),
    });
    const result = await res.json();
    if (result.success) {
      setNotes([result.note, ...notes]);
      setDraft("");
      setTemplate("");
    }
    setIsSubmitting(false);
  };

  return (
    <div className="p-4 space-y-6">
      <Card>
        <CardContent className="space-y-4">
          <h2 className="text-xl font-semibold">New Note</h2>
          <div className="grid gap-2">
            <Label>Use Template (optional)</Label>
            <Input
              placeholder="e.g., Comprehensive Exam"
              value={template}
              onChange={(e) => setTemplate(e.target.value)}
            />
            <Label>Note Content</Label>
            <Textarea
              placeholder="Type or dictate your note here..."
              value={draft}
              onChange={(e) => setDraft(e.target.value)}
            />
          </div>
          <Button onClick={submitDraft} disabled={isSubmitting || !draft}>
            {isSubmitting ? "Saving..." : "Save Draft"}
          </Button>
        </CardContent>
      </Card>

      <div className="space-y-4">
        <h2 className="text-xl font-semibold">Patient Notes</h2>
        {notes.length === 0 ? (
          <p>No notes available.</p>
        ) : (
          notes.map((note) => (
            <Card key={note.id} className="bg-white border">
              <CardContent className="space-y-2">
                <p className="whitespace-pre-wrap">{note.content}</p>
                <div className="text-sm text-gray-600">
                  <p>Provider: {note.provider}</p>
                  <p>Date: {new Date(note.createdAt).toLocaleString()}</p>
                  <p>Status: {note.approved ? "Approved" : "Pending Approval"}</p>
                  {note.templateUsed && <p>Template: {note.templateUsed}</p>}
                </div>
              </CardContent>
            </Card>
          ))
        )}
      </div>
    </div>
  );
}
// PatientSchedulerAndAIHub.tsx

import React, { useEffect, useState } from "react";
import axios from "axios";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";

export default function PatientSchedulerAndAIHub({ patientId }: { patientId: string }) {
  const [appointments, setAppointments] = useState<any[]>([]);
  const [aiInsights, setAiInsights] = useState<any>({});
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      const [apptRes, aiRes] = await Promise.all([
        axios.get(`/api/schedule/${patientId}`),
        axios.get(`/api/aihub/${patientId}`)
      ]);
      setAppointments(apptRes.data);
      setAiInsights(aiRes.data);
      setLoading(false);
    };
    fetchData();
  }, [patientId]);

  const renderSchedule = () => (
    <div className="space-y-4">
      {appointments.map((appt) => (
        <Card key={appt.id} className="p-4">
          <div className="text-md font-medium">{appt.date} @ {appt.time}</div>
          <div className="text-sm text-muted-foreground">{appt.reason}</div>
        </Card>
      ))}
    </div>
  );

  const renderAIHub = () => (
    <div className="space-y-4">
      <Card className="p-4">
        <h3 className="font-semibold">Summary</h3>
        <p className="text-sm text-muted-foreground">{aiInsights.summary}</p>
      </Card>
      <Card className="p-4">
        <h3 className="font-semibold">AI Questions</h3>
        <ul className="list-disc ml-4 text-sm">
          {(aiInsights.questions || []).map((q: string, idx: number) => (
            <li key={idx}>{q}</li>
          ))}
        </ul>
      </Card>
    </div>
  );

  if (loading) return <div>Loading Scheduler and AI Hub...</div>;

  return (
    <Tabs defaultValue="schedule" className="w-full">
      <TabsList className="mb-4">
        <TabsTrigger value="schedule">Schedule</TabsTrigger>
        <TabsTrigger value="aihub">AI Hub</TabsTrigger>
      </TabsList>

      <TabsContent value="schedule">{renderSchedule()}</TabsContent>
      <TabsContent value="aihub">{renderAIHub()}</TabsContent>
    </Tabs>
  );
}

import { useState, useEffect } from "react";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { useUser } from "@/hooks/use-user";
import { format } from "date-fns";

export default function PatientNotes({ patientId }: { patientId: string }) {
  const { user } = useUser();
  const [notes, setNotes] = useState([]);
  const [draft, setDraft] = useState("");
  const [editingNoteId, setEditingNoteId] = useState<string | null>(null);
  const [template, setTemplate] = useState("");

  useEffect(() => {
    fetch(`/api/patient-notes/${patientId}`)
      .then((res) => res.json())
      .then(setNotes);
  }, [patientId]);

  const handleSave = async () => {
    const method = editingNoteId ? "PUT" : "POST";
    const url = editingNoteId
      ? `/api/patient-notes/${patientId}/${editingNoteId}`
      : `/api/patient-notes/${patientId}`;

    const res = await fetch(url, {
      method,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        content: draft,
        provider: user?.username,
        status: "draft",
      }),
    });

    const updated = await res.json();
    setNotes((prev) =>
      editingNoteId
        ? prev.map((n) => (n.id === updated.id ? updated : n))
        : [updated, ...prev]
    );
    setDraft("");
    setEditingNoteId(null);
  };

  const handleApprove = async (noteId: string) => {
    const res = await fetch(`/api/patient-notes/${patientId}/${noteId}/approve`, {
      method: "POST",
    });
    const updated = await res.json();
    setNotes((prev) => prev.map((n) => (n.id === noteId ? updated : n)));
  };

  const handleEdit = (noteId: string) => {
    const note = notes.find((n) => n.id === noteId);
    if (note) {
      setDraft(note.content);
      setEditingNoteId(noteId);
    }
  };

  const compExamTemplate = `Chief Complaint: \nMedical History: \nDental History: \nExtraoral Findings: \nIntraoral Findings: \nPeriodontal Status: \nRestorative Needs: \nRadiographic Interpretation: \nDiagnosis: \nTreatment Plan: \nPatient Education & Consent:`;

  return (
    <div className="p-4 space-y-4">
      <h2 className="text-xl font-semibold">Patient Notes</h2>

      <div className="space-y-2">
        <Textarea
          rows={10}
          value={draft || template}
          onChange={(e) => setDraft(e.target.value)}
          placeholder="Write a new note or use a template"
        />
        <div className="flex gap-2">
          <Button onClick={handleSave}>Save Draft</Button>
          <Button
            variant="outline"
            onClick={() => setTemplate(compExamTemplate)}
          >
            Load Comp Exam Template
          </Button>
        </div>
      </div>

      <div className="space-y-4">
        {notes.map((note) => (
          <div
            key={note.id}
            className="border rounded-lg p-4 bg-white shadow-md"
          >
            <div className="text-sm text-gray-600">
              <strong>{note.provider}</strong> on {format(new Date(note.date), "PPPpp")}
            </div>
            <pre className="whitespace-pre-wrap mt-2">{note.content}</pre>
            <div className="flex gap-2 mt-2">
              {note.status === "draft" && (
                <>
                  <Button size="sm" onClick={() => handleApprove(note.id)}>
                    Approve
                  </Button>
                  <Button size="sm" variant="outline" onClick={() => handleEdit(note.id)}>
                    Edit
                  </Button>
                </>
              )}
              {note.status === "final" && <span className="text-green-600">âœ” Finalized</span>}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
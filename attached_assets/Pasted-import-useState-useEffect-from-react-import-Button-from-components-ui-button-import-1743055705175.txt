import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent } from "@/components/ui/card";
import { useParams } from "wouter";

export default function PatientNotesSection() {
  const { patientId } = useParams();
  const [notes, setNotes] = useState([]);
  const [draft, setDraft] = useState("");
  const [isFinalized, setIsFinalized] = useState(false);
  const [loading, setLoading] = useState(true);
  const [message, setMessage] = useState("");

  useEffect(() => {
    async function fetchNotes() {
      try {
        const res = await fetch(`/api/notes/${patientId}`);
        const data = await res.json();
        setNotes(data.notes || []);
        const latestDraft = data.notes?.find((n) => n.status === "draft");
        if (latestDraft) {
          setDraft(latestDraft.content);
        }
      } catch (err) {
        setMessage("Error loading notes");
      } finally {
        setLoading(false);
      }
    }
    fetchNotes();
  }, [patientId]);

  const saveDraft = async () => {
    const res = await fetch("/api/notes/save-draft", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ patientId, content: draft }),
    });
    if (res.ok) setMessage("Draft saved");
    else setMessage("Failed to save draft");
  };

  const finalizeNote = async () => {
    const res = await fetch("/api/notes/finalize", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ patientId, content: draft }),
    });
    if (res.ok) {
      setMessage("Note finalized");
      setIsFinalized(true);
    } else setMessage("Error finalizing note");
  };

  return (
    <Card className="mt-4">
      <CardContent>
        <h2 className="text-xl font-semibold mb-2">Patient Notes</h2>

        {loading ? (
          <p>Loading notes...</p>
        ) : (
          <>
            <Textarea
              value={draft}
              onChange={(e) => setDraft(e.target.value)}
              disabled={isFinalized}
              placeholder="Write or edit your patient note here..."
              rows={10}
            />

            <div className="flex gap-2 mt-2">
              <Button onClick={saveDraft} disabled={isFinalized}>Save Draft</Button>
              <Button onClick={finalizeNote} disabled={isFinalized}>Finalize & Lock</Button>
            </div>
            {message && <p className="text-sm text-muted-foreground mt-1">{message}</p>}

            <div className="mt-6">
              <h3 className="font-medium">Previous Notes:</h3>
              {notes
                .filter((n) => n.status === "final")
                .map((note) => (
                  <div key={note.id} className="mt-2 border-t pt-2">
                    <p className="text-sm whitespace-pre-wrap">{note.content}</p>
                    <p className="text-xs text-muted-foreground mt-1">
                      By {note.provider} on {new Date(note.createdAt).toLocaleDateString()}
                    </p>
                  </div>
              ))}
            </div>
          </>
        )}
      </CardContent>
    </Card>
  );
}

import React, { useState } from "react";
import { Card, CardHeader, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";

interface DiagnosisFeedbackUIProps {
  diagnoses: {
    id: string;
    label: string;
    confidence: number;
    reasoning: string;
  }[];
  onFeedbackSubmit: (feedback: {
    selectedDiagnosisId: string;
    providerNotes: string;
    requestMoreInfo: boolean;
  }) => void;
  showHistory?: boolean;
  history?: {
    diagnosisId: string;
    selectedBy: string;
    feedbackNotes?: string;
    timestamp: string;
  }[];
}

const DiagnosisFeedbackUI: React.FC<DiagnosisFeedbackUIProps> = ({
  diagnoses,
  onFeedbackSubmit,
  showHistory = false,
  history = [],
}) => {
  const [selectedId, setSelectedId] = useState<string | null>(null);
  const [providerNotes, setProviderNotes] = useState("");
  const [requestMoreInfo, setRequestMoreInfo] = useState(false);

  const handleSubmit = () => {
    if (!selectedId) return;
    onFeedbackSubmit({ selectedDiagnosisId: selectedId, providerNotes, requestMoreInfo });
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <h2 className="text-lg font-semibold">AI Diagnosis Feedback</h2>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {diagnoses.map((diag) => (
            <div
              key={diag.id}
              className={`p-3 border rounded cursor-pointer ${
                selectedId === diag.id ? "bg-green-100 border-green-500" : ""
              }`}
              onClick={() => setSelectedId(diag.id)}
            >
              <p className="font-bold">{diag.label}</p>
              <p className="text-sm text-muted">Confidence: {(diag.confidence * 100).toFixed(1)}%</p>
              <p className="text-xs mt-1">Reasoning: {diag.reasoning}</p>
            </div>
          ))}

          <Textarea
            value={providerNotes}
            onChange={(e) => setProviderNotes(e.target.value)}
            placeholder="Add optional notes or reasoning..."
          />

          <div className="flex items-center justify-between">
            <label className="flex items-center space-x-2">
              <input
                type="checkbox"
                checked={requestMoreInfo}
                onChange={(e) => setRequestMoreInfo(e.target.checked)}
              />
              <span>Ask AI for more info</span>
            </label>
            <Button disabled={!selectedId} onClick={handleSubmit}>
              Submit Feedback
            </Button>
          </div>

          {showHistory && history.length > 0 && (
            <div className="mt-6">
              <h3 className="text-md font-semibold mb-2">Feedback History</h3>
              {history.map((h) => (
                <div key={h.timestamp} className="text-sm border-t pt-2">
                  <p>
                    <strong>Diagnosis:</strong> {h.diagnosisId}
                  </p>
                  <p>
                    <strong>By:</strong> {h.selectedBy} on {new Date(h.timestamp).toLocaleString()}
                  </p>
                  {h.feedbackNotes && <p><strong>Notes:</strong> {h.feedbackNotes}</p>}
                </div>
              ))}
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  );
};

export default DiagnosisFeedbackUI;

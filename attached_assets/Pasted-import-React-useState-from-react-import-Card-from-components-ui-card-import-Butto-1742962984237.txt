import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import jsPDF from "jspdf";

const assistantModules = [
  // Existing modules...
  {
    title: "OSHA Infection Control & Workplace Safety",
    description: "Required training for all dental staff on universal precautions, bloodborne pathogens, and OSHA-mandated safety protocols.",
    steps: [
      "Treat all bodily fluids as potentially infectious — always wear PPE.",
      "Wash hands before and after patient contact, and after removing gloves.",
      "Dispose of sharps immediately in puncture-resistant containers.",
      "Do not recap needles unless using one-handed scoop technique.",
      "Disinfect operatories between every patient following EPA/CDC standards.",
      "Know where the SDS (Safety Data Sheets) are located in case of chemical exposure.",
      "Report needle sticks, exposure incidents, or safety concerns to your supervisor immediately."
    ],
    image: "/images/osha_safety.png",
    quiz: [
      {
        question: "What does OSHA require regarding all bodily fluids?",
        options: ["Treat them as clean", "Only saliva is dangerous", "Treat all as potentially infectious", "Only blood is risky"],
        answer: "Treat all as potentially infectious"
      },
      {
        question: "When should you wash your hands?",
        options: ["Only when visibly dirty", "Before and after patient contact", "Once per shift", "Only if gloves are torn"],
        answer: "Before and after patient contact"
      },
      {
        question: "How should needles be handled after use?",
        options: ["Recap with both hands", "Throw on tray", "Recap with scoop or dispose immediately", "Rinse with water"],
        answer: "Recap with scoop or dispose immediately"
      },
      {
        question: "What should be done with used sharps?",
        options: ["Place in general trash", "Wrap in gauze", "Dispose in puncture-proof sharps container", "Leave on counter"],
        answer: "Dispose in puncture-proof sharps container"
      },
      {
        question: "What should you do after a needle stick injury?",
        options: ["Clean it and move on", "Report to supervisor and follow exposure protocol", "Wait 24 hours", "Hide it"],
        answer: "Report to supervisor and follow exposure protocol"
      },
      {
        question: "Where can you find safety information on chemicals in the office?",
        options: ["Front desk", "Google", "SDS (Safety Data Sheets) folder", "Lab book"],
        answer: "SDS (Safety Data Sheets) folder"
      },
      {
        question: "Why is proper PPE use important?",
        options: ["Looks professional", "Protects against infection and chemical exposure", "Keeps patients calm", "Avoids wrinkles"],
        answer: "Protects against infection and chemical exposure"
      },
      {
        question: "What is the correct way to disinfect a room between patients?",
        options: ["Just wipe the tray", "Use soap and water", "Use EPA-approved disinfectant with full contact time", "Spray air freshener"],
        answer: "Use EPA-approved disinfectant with full contact time"
      },
      {
        question: "What must be done before putting on new gloves?",
        options: ["Wave at the patient", "Use hand sanitizer", "Wash or sanitize hands", "Nothing"],
        answer: "Wash or sanitize hands"
      },
      {
        question: "Who is responsible for reporting unsafe conditions?",
        options: ["The doctor only", "The OSHA rep", "Every employee", "Only managers"],
        answer: "Every employee"
      }
    ]
  }
];

export default function AssistantTab() {
  const [quizResults, setQuizResults] = useState({});
  const [certified, setCertified] = useState({ hipaa: false, osha: false });

  const handleQuizSubmit = (title, score) => {
    setQuizResults(prev => ({ ...prev, [title]: score }));
    if (title.includes("HIPAA") && score >= 90) setCertified(prev => ({ ...prev, hipaa: true }));
    if (title.includes("OSHA") && score >= 90) setCertified(prev => ({ ...prev, osha: true }));
  };

  const generateCertificate = (type) => {
    const doc = new jsPDF();
    const today = new Date().toLocaleDateString();
    doc.setFontSize(20);
    doc.text(`${type} Compliance Certificate`, 20, 30);
    doc.setFontSize(14);
    doc.text(`This certifies that ___________________`, 20, 50);
    doc.text(`has successfully completed ${type} compliance training`, 20, 60);
    doc.text(`in accordance with federal regulations.`, 20, 70);
    doc.text(`Date: ${today}`, 20, 90);
    doc.text("Issued by: DentaMind Training Program", 20, 100);
    doc.save(`${type}_Certificate.pdf`);
  };

  return (
    <div className="p-6 grid gap-6">
      {assistantModules.map((module, idx) => (
        <Card key={idx} className="p-4 rounded-2xl shadow">
          <h2 className="text-xl font-bold mb-2">{module.title}</h2>
          <p className="mb-4">{module.description}</p>
          <img src={module.image} alt={module.title} className="mb-4 w-full max-w-md rounded" />
          <ul className="list-disc ml-6 mb-4">
            {module.steps.map((step, i) => (
              <li key={i}>{step}</li>
            ))}
          </ul>
          <Quiz 
            module={module.title} 
            questions={module.quiz} 
            onSubmit={handleQuizSubmit} 
          />
          {quizResults[module.title] >= 90 && (
            <p className="text-green-600 font-semibold mt-2">✅ Passed with {quizResults[module.title]}%</p>
          )}
        </Card>
      ))}

      {certified.hipaa && (
        <Card className="p-4 mt-4 text-center shadow-md rounded-xl">
          <h3 className="text-lg font-semibold mb-2">HIPAA Certificate Ready</h3>
          <Button onClick={() => generateCertificate("HIPAA")}>Download HIPAA Certificate</Button>
        </Card>
      )}

      {certified.osha && (
        <Card className="p-4 mt-4 text-center shadow-md rounded-xl">
          <h3 className="text-lg font-semibold mb-2">OSHA Certificate Ready</h3>
          <Button onClick={() => generateCertificate("OSHA")}>Download OSHA Certificate</Button>
        </Card>
      )}
    </div>
  );
}

function Quiz({ module, questions, onSubmit }) {
  const [answers, setAnswers] = useState({});
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(null);

  const handleChange = (qIndex, value) => {
    setAnswers(prev => ({ ...prev, [qIndex]: value }));
  };

  const handleSubmit = () => {
    let correct = 0;
    questions.forEach((q, i) => {
      if (answers[i] === q.answer) correct++;
    });
    const result = Math.round((correct / questions.length) * 100);
    setScore(result);
    setSubmitted(true);
    onSubmit(module, result);
  };

  return (
    <div className="mt-6">
      <h3 className="font-semibold text-lg mb-2">Quiz</h3>
      {questions.map((q, i) => (
        <div key={i} className="mb-4">
          <p className="mb-1 font-medium">{i + 1}. {q.question}</p>
          {q.options.map((opt, j) => (
            <label key={j} className="block">
              <input
                type="radio"
                name={`q-${module}-${i}`}
                value={opt}
                onChange={() => handleChange(i, opt)}
                disabled={submitted}
              /> {opt}
            </label>
          ))}
        </div>
      ))}
      {!submitted && (
        <Button onClick={handleSubmit}>Submit Quiz</Button>
      )}
      {submitted && (
        <p className="mt-2 font-semibold">Score: {score}%</p>
      )}
    </div>
  );
}

"""Initial schema

Revision ID: 960bbb8fefac
Revises: 
Create Date: 2025-04-29 05:43:55.711394

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '960bbb8fefac'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_events'))
    )
    op.create_table('treatment_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('dentist_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PLANNED', 'CONSENT_SIGNED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='treatmentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('consent_signed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consent_signed_by', sa.String(length=255), nullable=True),
    sa.Column('consent_signature_data', sa.Text(), nullable=True),
    sa.Column('consent_ip_address', sa.String(length=45), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_treatment_plans'))
    )
    op.create_table('treatment_plan_procedures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('treatment_plan_id', sa.Integer(), nullable=False),
    sa.Column('procedure_code', sa.String(length=10), nullable=False),
    sa.Column('tooth_number', sa.String(length=2), nullable=True),
    sa.Column('surface', sa.String(length=5), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('fee', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PLANNED', 'CONSENT_SIGNED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='treatmentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['treatment_plan_id'], ['treatment_plans.id'], name=op.f('fk_treatment_plan_procedures_treatment_plan_id_treatment_plans')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_treatment_plan_procedures'))
    )
    op.create_table('ledger_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('treatment_plan_id', sa.Integer(), nullable=False),
    sa.Column('procedure_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('entry_type', sa.String(length=10), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['procedure_id'], ['treatment_plan_procedures.id'], name=op.f('fk_ledger_entries_procedure_id_treatment_plan_procedures')),
    sa.ForeignKeyConstraint(['treatment_plan_id'], ['treatment_plans.id'], name=op.f('fk_ledger_entries_treatment_plan_id_treatment_plans')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ledger_entries'))
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ledger_entry_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'CREDIT_CARD', 'DEBIT_CARD', 'CHECK', 'INSURANCE', 'OTHER', name='paymentmethod'), nullable=False),
    sa.Column('reference_number', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['ledger_entry_id'], ['ledger_entries.id'], name=op.f('fk_payments_ledger_entry_id_ledger_entries')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('ledger_entries')
    op.drop_table('treatment_plan_procedures')
    op.drop_table('treatment_plans')
    op.drop_table('audit_events')
    # ### end Alembic commands ###

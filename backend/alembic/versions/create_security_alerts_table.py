"""Create security alerts table

Revision ID: 9a2fe4c8b75d
Revises: 784c2fe5a92b
Create Date: 2023-07-15 14:32:11.234567

This migration creates the security_alerts table for storing and tracking 
the lifecycle of security alerts generated by the anomaly detection system.
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic
revision = '9a2fe4c8b75d'
down_revision = '784c2fe5a92b'  # This should point to the audit_logs migration
branch_labels = None
depends_on = None


def upgrade():
    # Create enum types
    op.execute(
        "CREATE TYPE alert_category AS ENUM ('access', 'auth', 'api', 'location', 'behavior', 'system')"
    )
    
    op.execute(
        "CREATE TYPE alert_severity AS ENUM ('low', 'medium', 'high', 'critical')"
    )
    
    op.execute(
        "CREATE TYPE alert_status AS ENUM ('open', 'acknowledged', 'false_positive', 'resolved', 'escalated')"
    )
    
    # Create security_alerts table
    op.create_table(
        'security_alerts',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('alert_id', sa.String(length=36), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        
        # Alert details
        sa.Column('alert_type', sa.String(length=50), nullable=False),
        sa.Column('category', sa.Enum('access', 'auth', 'api', 'location', 'behavior', 'system', 
                                      name='alert_category'), nullable=False),
        sa.Column('severity', sa.Enum('low', 'medium', 'high', 'critical', 
                                      name='alert_severity'), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        
        # Affected entities
        sa.Column('user_id', sa.String(length=50), nullable=True),
        sa.Column('ip_address', sa.String(length=50), nullable=True),
        sa.Column('patient_id', sa.String(length=50), nullable=True),
        sa.Column('resource_path', sa.String(length=255), nullable=True),
        
        # Alert metadata
        sa.Column('source', sa.String(length=50), nullable=False, server_default='anomaly_detection'),
        sa.Column('count', sa.Integer(), nullable=False, server_default='1'),
        sa.Column('details', sa.JSON(), nullable=True),
        
        # Resolution tracking
        sa.Column('status', sa.Enum('open', 'acknowledged', 'false_positive', 'resolved', 'escalated', 
                                    name='alert_status'), nullable=False, server_default='open'),
        sa.Column('assigned_to', sa.String(length=50), nullable=True),
        sa.Column('resolved_by', sa.String(length=50), nullable=True),
        sa.Column('resolution_time', sa.DateTime(), nullable=True),
        sa.Column('resolution_notes', sa.Text(), nullable=True),
        
        # Timestamps for status changes
        sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
        sa.Column('acknowledged_by', sa.String(length=50), nullable=True),
        sa.Column('escalated_at', sa.DateTime(), nullable=True),
        sa.Column('escalated_by', sa.String(length=50), nullable=True),
        
        # Primary key
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes
    op.create_index(op.f('ix_security_alerts_alert_id'), 'security_alerts', ['alert_id'], unique=True)
    op.create_index(op.f('ix_security_alerts_timestamp'), 'security_alerts', ['timestamp'], unique=False)
    op.create_index(op.f('ix_security_alerts_alert_type'), 'security_alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_security_alerts_category'), 'security_alerts', ['category'], unique=False)
    op.create_index(op.f('ix_security_alerts_severity'), 'security_alerts', ['severity'], unique=False)
    op.create_index(op.f('ix_security_alerts_user_id'), 'security_alerts', ['user_id'], unique=False)
    op.create_index(op.f('ix_security_alerts_ip_address'), 'security_alerts', ['ip_address'], unique=False)
    op.create_index(op.f('ix_security_alerts_patient_id'), 'security_alerts', ['patient_id'], unique=False)
    op.create_index(op.f('ix_security_alerts_status'), 'security_alerts', ['status'], unique=False)
    op.create_index(op.f('ix_security_alerts_assigned_to'), 'security_alerts', ['assigned_to'], unique=False)
    
    # Create composite indexes for common queries
    op.create_index('ix_security_alerts_status_severity', 'security_alerts', ['status', 'severity'], unique=False)
    op.create_index('ix_security_alerts_timestamp_status', 'security_alerts', ['timestamp', 'status'], unique=False)
    op.create_index('ix_security_alerts_user_status', 'security_alerts', ['user_id', 'status'], unique=False)


def downgrade():
    # Drop all indexes
    op.drop_index('ix_security_alerts_user_status', table_name='security_alerts')
    op.drop_index('ix_security_alerts_timestamp_status', table_name='security_alerts')
    op.drop_index('ix_security_alerts_status_severity', table_name='security_alerts')
    
    op.drop_index(op.f('ix_security_alerts_assigned_to'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_status'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_patient_id'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_ip_address'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_user_id'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_severity'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_category'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_alert_type'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_timestamp'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_alert_id'), table_name='security_alerts')
    
    # Drop the table
    op.drop_table('security_alerts')
    
    # Drop enum types
    op.execute("DROP TYPE alert_status")
    op.execute("DROP TYPE alert_severity")
    op.execute("DROP TYPE alert_category") 